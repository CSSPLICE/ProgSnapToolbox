EnumTypes:
  - name: EventInitiator
    values:
      - name: UserDirectAction
        description: Indicates that the user directly instigated the action.
      - name: UserIndirectAction
        description: Indicates that the user indirectly instigated an action.
  - name: EventOrderScope
    values:
      - name: Global
        description: Indicates that the Order column values are intended to be meaningful to determine the order of all events (globally) in the dataset.
      - name: Restricted
        description: Indicates that the Order column values are only comparable between events with identical values for all of the columns specified by the EventOrderScopeColumns property
      - name: None
        description: Indicates that the Order column values should never be assumed to determine an ordering for any events; in other words, the events are not ordered.
  - name: CodeStateRepresentation
    values:
      - name: Table
      - name: Directory
      - name: Git

Metadata:
  properties:
    - name: Version
      requirement: Required
      datatype: String
      description: |
        This property specifies the current version of the ProgSnap 2 standard that these files adhere to. This allows the standard to change over time. ProgSnap2 versions use semantic versioning and should therefore be string values.

    - name: IsEventOrderingConsistent
      requirement: Required
      datatype: Boolean
      description: |
        This property specifies whether the events in the main event table are predominantly ordered (within the scope specified by the EventOrderScope property) according to a single, globally-consistent clock, such that the ordering of the events in the same scope can (largely) be assumed to reflect their actual temporal order according to that clock.  Datasets originating from distributed systems (including client/server systems) might not have a single clock, in which case the value of this property should be false.
        Note that data consumers should be prepared to handle anomalies in event ordering, even if this property value is set to true.

    - name: EventOrderScope
      requirement: Required
      datatype: Enum
      description: |
        This property specifies the scope of Order column values within the dataset.  The possible values are Global, Restricted, and None.  When the value is Global, the Order column values are intended to be meaningful to determine the order of all events (globally) in the dataset.  When the value is Restricted, Order column values are only comparable between events with identical values for all of the columns specified by the EventOrderScopeColumns property.  When the value is None, the Order column values should never be assumed to determine an ordering for any events; in other words, the events are not ordered.

    - name: EventOrderScopeColumns
      requirement: Required
      datatype: String
      description: |
        This property specifies the main event table columns which define the scope of meaningful comparisons of Order column values.  This property must be set to a non-empty value if the EventOrderScope property has the value “Restricted”.  (This property has no significance if EventOrderScope is not “Restricted”.)  (This property has no significance if EventOrderScope is not “Restricted”.)  The value of this column is a semicolon-separated list of main event table column names.
        See more information in the full specification.

    - name: CodeStateRepresentation
      requirement: Required
      datatype: Enum
      description: |
        This property specifies which CodeState representation is used by the dataset.  This property must be specified using one of the legal values listed below.

    - name: ProgramInputLinkTable
      requirement: Required
      datatype: String
      description: |
        This property specifies the name of the LinkTable that contains columns describing program input, if these are contained in a separate table rather than as columns in the MainTable. If they are included in the MainTable, this value should be the empty string.

MainTable:
  columns:
    - name: EventType
      requirement: Required
      datatype: Enum
      description: |
        Every line logged in a dataset must be associated with a specific event, where events can be categorized as one of several possible types. Users are encouraged to apply the built-in enum values whenever possible, but if a new event type is necessary, the coder may define a new enum type beginning with the string “X-”. The metadata of the associated dataset should define what the new EventTypes mean.

    - name: EventID
      requirement: Required
      datatype: ID
      description: |
        Every event must have an ID value that is distinct from (not equal to) all other events in the main event table.

    - name: SubjectID
      requirement: Required
      datatype: ID
      description: |
        An ID representing the subject associated with the event. Whenever possible, the SubjectID should represent a single individual (i.e., a student.) A SubjectID could represent a group of individuals (i.e., a team) if the event truly originates from the group as a whole and is not directly associated with a single individual within the group.
        SubjectID values and TeamID values are considered to be in the same namespace. For events where SubjectID and TeamID have the same value, it means that the event is ascribed to a team as a whole rather than any specific member of the team.
        When it is not known who the subject associated with an event is, the special ID “UNKNOWN” should be used. This ID should not be used for regular subjects, and should be treated as missing information during analysis.

    - name: ToolInstances
      requirement: Required
      datatype: String
      description: TODO

    - name: Order
      requirement: Optional
      datatype: Integer
      description: TODO

    - name: ClientTimestamp
      requirement: Optional
      datatype: Timestamp
      description: TODO

    # More columns...

    - name: SessionID
      requirement: EventSpecific
      datatype: ID
      description: TODO

    - name: CodeStateSection
      requirement: EventSpecific
      datatype: SourceLocation
      description: TODO

    - name: ProjectID
      requirement: EventSpecific
      datatype: ID
      description: TODO

    - name: EventInitiator
      requirement: EventSpecific
      datatype: Enum
      description: |
        Events are typically performed by either the user, the tool, or the instructor. When known, this column should specify which one instigated the event.
        Note that user, instructor, and team members can initiate actions either directly or indirectly. A direct action is one the person purposefully makes (like typing or editing a program with mouse clicks); an indirect action is one that is caused by a user action, but not done directly by the user (like when a user accepts an autocomplete recommendation and the text is filled in).
        Users are encouraged to apply the built-in enum values whenever possible, but if a new value is necessary, the coder may define a new custom enum value and document the new value in the README.md.

  event_types:
    - name: Session.Start
      description: Marks the start of a work session.
      required_columns:
        - SessionID

    - name: Session.End
      description: Marks the end of a work session.
      required_columns:
        - SessionID

    - name: Project.Open
      description: Indicates that a project was opened.
      required_columns:
        - ProjectID

    - name: Project.Close
      description: Indicates that a project was closed due to an explicit user or system action. Data consumers should be prepared to handle cases where Project.Open is not terminated by an explicit Project.Close.
      required_columns:
        - ProjectID

    - name: File.Create
      description: Indicates that a file was created.
      required_columns:
        - CodeStateSection
      optional_columns:
        - EventInitiator

    # More event types...

LinkTables:
  - name: LinkSubject
    id_column_names:
      - SubjectID
    additional_columns:
      - name: MidtermExamScore
        requirement: Optional
        datatype: Real
        description: |
          The student's score between 0-1 on the midterm exam.
